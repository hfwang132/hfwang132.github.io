<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>CS - Category - Haifei&#39;s Home</title>
        <link>http://example.com/categories/cs/</link>
        <description>CS - Category - Haifei&#39;s Home</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>hfwang132@gmail.com (hfwang132)</managingEditor>
            <webMaster>hfwang132@gmail.com (hfwang132)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 01 Jul 2023 17:48:54 &#43;0800</lastBuildDate><atom:link href="http://example.com/categories/cs/" rel="self" type="application/rss+xml" /><item>
    <title>Polling Jupyter Widget UI Events in Runtime</title>
    <link>http://example.com/ui_poll/</link>
    <pubDate>Sat, 01 Jul 2023 17:48:54 &#43;0800</pubDate>
    <author>hfwang132</author>
    <guid>http://example.com/ui_poll/</guid>
    <description><![CDATA[Let&rsquo;s look at a code snippet in the Jupyter Notebook:
1 2 3 4 5 6 7 8 9 10 import time import ipywidgets as widgets from IPython.display import display slider = widgets.IntSlider() display(slider) while True: print(slider.value) time.sleep(1) IntSlider is an interactive Jupyter Notebook widget. When the user interacts with the slider, the slider value should change.
However, if you run the above codes, you will find that the printed value of the slider won&rsquo;t change at all &ndash; it will be stuck at its initial value.]]></description>
</item>
<item>
    <title>Python coroutines and asyncio</title>
    <link>http://example.com/python_asyncio/</link>
    <pubDate>Tue, 13 Jun 2023 22:05:41 &#43;0800</pubDate>
    <author>hfwang132</author>
    <guid>http://example.com/python_asyncio/</guid>
    <description><![CDATA[Recently, I have been using Python coroutines/asynchronous programming in a project. Now, I will summarize my experience.
Import 1 import asyncio If asyncio is to be used in an IPython environment, we have to add two more linesï¼š
1 2 3 import nest_asyncio nest_asyncio.apply() import asyncio Coroutines Coroutines are the core of asynchronous programming in Python. To define a coroutine, you need to use async def.
1 2 3 async def main(): # do something print(&#34;Hello world!]]></description>
</item>
<item>
    <title>Increasing the swapfile for Linux</title>
    <link>http://example.com/increase_swapfile/</link>
    <pubDate>Mon, 12 Jun 2023 22:59:26 &#43;0800</pubDate>
    <author>hfwang132</author>
    <guid>http://example.com/increase_swapfile/</guid>
    <description><![CDATA[Xilinx&rsquo;s toolchain consumes soooo much memory! Sometimes it causes the system to freeze&hellip; After all, my laptop only has 8GB of RAM. So there&rsquo;s no other choice but to add virtual memories.
After increase the swapfile, the system performance has improved a lot:
1 2 3 4 sudo swapoff /swapfile sudo dd if=/dev/zero of=/swapfile bs=1M count=16384 sudo mkswap /swapfile sudo swapon /swapfile ]]></description>
</item>
<item>
    <title>Mounting the EFI partition in Windows OS</title>
    <link>http://example.com/efi_partition/</link>
    <pubDate>Mon, 12 Jun 2023 22:26:16 &#43;0800</pubDate>
    <author>hfwang132</author>
    <guid>http://example.com/efi_partition/</guid>
    <description><![CDATA[To mount the EFI partitions, run the following commands in PowerShell:
1 2 3 4 5 6 diskpart list disk # make sure which is the disk that contains the EFI partition. usually 0 select disk 0 list partition # make sure which is the EFI partition. normally 0 select disk 0 assign letter=z Then we will mount the EFI partition as drive Z.
This operation may be useful when using a dual-boot system with Windows and Ubuntu: Sometimes, after removing the Ubuntu system, only the Windows system remains, but the GRUB interface still appears every time the computer boots.]]></description>
</item>
</channel>
</rss>
